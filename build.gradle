plugins {
	id 'fabric-loom' version '1.0-SNAPSHOT'
	id 'maven-publish'
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

repositories {
	flatDir {
		dirs 'lib'
	}
	maven {
		name = "meteor-maven"
		url = "https://maven.meteordev.org/releases"
		content {
			includeGroup 'meteordevelopment'
		}
	}
	maven {
		name = 'Ladysnake Mods'
		url = 'https://ladysnake.jfrog.io/artifactory/mods'
		content {
			includeGroup 'io.github.ladysnake'
			includeGroupByRegex 'io\\.github\\.onyxstudios.*'
		}
	}
	maven {
		name = "meteor-maven-snapshots"
		url = "https://maven.meteordev.org/snapshots"
	}
	mavenCentral()
}

configurations {
	libImpl
	modImpl

	modImplementation.extendsFrom(modInclude)
	include.extendsFrom(modInclude)
}

dependencies {
	// To change the versions see the gradle.properties file
	minecraft("com.mojang:minecraft:${project.minecraft_version}")
	mappings("net.fabricmc:yarn:${project.yarn_mappings}:v2")
	modImplementation("net.fabricmc:fabric-loader:${project.loader_version}")

	// Lombok
	compileOnly(group: "org.projectlombok", name: "lombok", version: "1.18.24")
	annotationProcessor(group: "org.projectlombok", name: "lombok", version: "1.18.24")

	// Baritone
	modInclude "baritone:fabric:${project.minecraft_version}-SNAPSHOT"

	// Fabric api
	Set<String> apiModules = [
			"fabric-api-base",
			"fabric-resource-loader-v0"
	]
	// Add each module we need
	apiModules.forEach {
		modImpl(fabricApi.module(it, project.fabric_version))
	}

	// 3rd party
	libImpl(group: "meteordevelopment", name: "discord-ipc", version: "1.1")
	//modImpl(name: "xauthlib-1.0.1")

	modImpl(group: "io.github.ladysnake", name: "satin", version: "1.9.0") {
		transitive = false
	}
//	include(group: "io.github.ladysnake", name: "satin", version: "1.9.0")

	configurations.libImpl.dependencies.each {
		implementation(it)
		include(it)
	}

	configurations.modImpl.dependencies.each {
		modImplementation(it)
		include(it)
	}
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	// Minecraft 1.18 (1.18-pre2) upwards uses Java 17.
	it.options.release = 17
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.archivesBaseName}"}
	}
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}
